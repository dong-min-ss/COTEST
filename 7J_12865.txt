#include<iostream>
#include<vector>
#include<map>
#include<cstring>
#include<algorithm>
#include<climits>
#include<iomanip>
using namespace std;
typedef long long ll;

int dp[100001], n, k, w, v;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> k;
    vector<pair<int, int>> pv(n);

    for (int i = 0; i < n; i++) {
        cin >> w >> v;
        pv[i] = { w,v };
    }

    for (int i = 0; i < n; i++) {
        int weight = pv[i].first;
        int value = pv[i].second;
        for (int j = k; j >= weight; j--) {
                dp[j] = max(dp[j], dp[j - weight] + value);
        }
    }

    cout << dp[k];
    return 0;
}