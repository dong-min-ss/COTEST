#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
using namespace std;
typedef long long ll;

const int INF = 987654321;
ll n, m, a, b, c, dist[1004];
vector<pair<int, int>>adj[1004];
queue<int> q;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    fill(dist, dist + 1004, INF);
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> a >> b >> c;
        adj[a].push_back({ b,c }); // a에서 b로, 비용은 c
    }
    dist[1] = 0;
    
    for (int i = 0; i < n; i++) {
        for (int here = 1; here <= n; here++) { // 1번도시에서 출발
            for (auto there : adj[here]) {
                int d = there.second;
                int next = there.first;
                if (dist[here] != INF && dist[here] + d < dist[next]) {
                    if (i == n - 1) q.push(next); // 마지막 구간에서도 갱신이 되면 음수 사이클
                    dist[next] = dist[here] + d;
                }
            }
        }
    }

    if (q.size()) cout << -1 << "\n";
    else {
        for (int i = 2; i <= n; i++) cout << (dist[i] == INF ? -1 : dist[i]) << "\n";    
    }

    return 0;
}