#include<iostream>
#include<vector>
#include<map>
#include<cstring>
#include<algorithm>
#include<climits>
#include<iomanip>
using namespace std;
typedef long long ll;

int n, m, a[2001], dp[2001][2001];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
   
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    memset(dp, -1, sizeof(dp));
    for (int i = 1; i <= n; i++) dp[i][i] = 1; // 길이가 1

    for (int i = 1; i < n; i++) { // 길이가 2
        if (a[i] == a[i + 1]) dp[i][i + 1] = 1;
        else dp[i][i + 1] = 0;
    }

    for (int len = 3; len <= n; len++) {
        for (int start = 1; start <= n - len + 1; start++) {
            int end = start + len - 1;
            if (a[start] == a[end] && dp[start + 1][end - 1] == 1)
                dp[start][end] = 1;
            else
                dp[start][end] = 0;
        }
    }

    cin >> m;
    for (int i = 0; i < m; i++) {
        int s, e;
        cin >> s >> e;
        cout << dp[s][e] << "\n";
    }

    return 0;
}