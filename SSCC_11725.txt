#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<cstring>
using namespace std;

// const int dy[] = { -1,0,1,0 };
// const int dx[] = { 0,1,0,-1 };

int n, m, v, a, b, visited[100004], parent[100004];
vector<int> adj[100004];

void DFS(int cur) { // 루트 노드에 도달할 때까지 탐색
	visited[cur] = 1;
	
	for (auto next : adj[cur]) {
		if (visited[next] == 0) {
			parent[next] = cur;
			DFS(next);
		}
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> n;
	for (int i = 0; i < n - 1; i++) {
		cin >> a >> b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}

	DFS(1);

	for (int i = 2; i <= n; i++) {
		cout << parent[i] << "\n";
	}

	return 0;
}