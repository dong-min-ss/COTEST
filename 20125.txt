#include <iostream>
#include <vector>
#include <cctype>
#include <queue>
#include <algorithm>
#include <string>
using namespace std;
typedef long long ll;

const int dy[] = { -1,0,1,0 };
const int dx[] = { 0,-1,0,1 };

int a[1001][1001], n;
int LL, RL, LA, RA, W;
pair<int, int> H;
char c;

bool Heart(int y, int x) {
    for (int i = 0; i < 4; i++) {
        int ny = y + dy[i];
        int nx = x + dx[i];
        if (a[ny][nx] == 0) {
            return false;
        }
    }
    return true;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> c;
            if (c == '*') a[i][j] = 1;
        }
    }

    for (int i = 1; i < n - 1; i++) {
        for (int j = 1; j < n - 1; j++) {
            if (Heart(i, j))
                H = { i,j };
        }
    }

    // H = {심장 y, 심장 x} 가 이미 구해진 상태
    int y = H.first, x = H.second;

    // 1) 왼쪽 팔 길이
    LA = 0;
    for (int j = x - 1; j >= 0 && a[y][j] == 1; --j) {
        LA++;
    }

    // 2) 오른쪽 팔 길이
    RA = 0;
    for (int j = x + 1; j < n && a[y][j] == 1; ++j) {
        RA++;
    }

    // 3) 허리 길이 (심장 바로 아래부터)
    W = 0;
    int i = y + 1;
    while (i < n && a[i][x] == 1) {
        W++;
        i++;
    }
    // i 는 이제 허리 끝 다음 행을 가리킴

    // 4) 다리 길이 (허리 끝에서 한 칸 더 내려간 곳부터)
    LL = RL = 0;
    int rstart = y + W + 1;
    // 왼쪽 다리
    for (int r = rstart; r < n && a[r][x - 1] == 1; ++r) {
        LL++;
    }
    // 오른쪽 다리
    for (int r = rstart; r < n && a[r][x + 1] == 1; ++r) {
        RL++;
    }

    cout << y+1 << " " << x+1 << "\n";
    cout << LA << " " << RA << " " << W << " " << LL << " " << RL;

    return 0;
}
