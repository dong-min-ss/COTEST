#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
using namespace std;
typedef long long ll;

const int INF = 987654321;

int n, m, x;
vector<int> adj1[100001], adj2[100001];
int visited[100001];

int BFS(int here, vector<int> adj[]) {
    visited[here] = 1;
    queue<int> q;
    q.push(here);
    int ret = 0;

    while (!q.empty()) {
        int there = q.front();
        q.pop();

        for (auto a : adj[there]) {
            if (visited[a] == 0) {
                visited[a] = 1;
                q.push(a);
                ret++;
            }
        }
    }

    return ret;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m >> x;
    for (int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        adj1[a].push_back(b); // 순방향
        adj2[b].push_back(a); // 역방향
    }

    int _min = BFS(x, adj2); // 내 앞에 몇명
    memset(visited, 0, sizeof(visited));
    int _max = BFS(x, adj1); // 내뒤에 몇명

    cout << _min + 1 << " " << n - _max;
    return 0;
}