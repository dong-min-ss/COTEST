#include<iostream>
#include<vector>
#include<map>
#include<cstring>
#include<algorithm>
#include<climits>
#include<iomanip>
using namespace std;
typedef long long ll;

const int INF = 987654321;
int a[1004][3], dp[1004][3], n;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    for (int i = 0; i < 1004; i++) {
        fill(dp[i], dp[i] + 3, INF);
    }

    cin >> n;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= 3; j++) {
            cin >> a[i][j];
            if (i == 1) dp[i][j] = a[i][j];
        }
    }

    for (int i = 2; i <= n; i++) {
        for (int j = 1; j <= 3; j++) {
            if (j == 1) dp[i][j] = min(dp[i - 1][2], dp[i - 1][3]) + a[i][j];
            else if (j == 2) dp[i][j] = min(dp[i - 1][1], dp[i - 1][3]) + a[i][j];
            else dp[i][j] = min(dp[i - 1][1], dp[i - 1][2]) + a[i][j];
        }
    }

    int result = INF;
    for (int i = 1; i <= 3; i++)
        result = min(result, dp[n][i]);

    cout << result;
    return 0;
}