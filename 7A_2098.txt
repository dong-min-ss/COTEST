#include<iostream>
#include<vector>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
using namespace std;
typedef long long ll;

const int INF = 987654321;
int n, a[16][16], dp[16][1 << 16];

int go(int here, int visited) {
    if (visited == (1 << n) - 1) { // visted가 111...1인 경우 // 모든 도시 방문
        if (a[here][0] == 0) return INF;
        else return a[here][0];
    }

    int& ret = dp[here][visited];
    if (ret != -1) return ret;

    ret = INF;
    for (int i = 0; i < n; i++) {
        if (visited & (1 << i)) continue; // 이미 방문한 경우
        if (a[here][i] == 0) continue; // 길이 없는 경우
        ret = min(ret, go(i, visited | (1 << i)) + a[here][i]); // 0인 비트를 1로 바꿔줌
    }
    return ret;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    memset(dp, -1, sizeof(dp));

    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> a[i][j];

    cout << go(0, 1);

    return 0;
}