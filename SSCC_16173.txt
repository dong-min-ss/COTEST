#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
typedef long long ll;
using namespace std;

// const int dy[] = { -1, 0, 1, 0 };
// const int dx[] = { 0, 1, 0, -1 };

int n, a[4][4], visited[4][4];
bool flag;
void DFS(int y, int x) {
    if (a[y][x] == -1) { // 도착 지점에 온 경우 
        flag = true;
        return;
    }
    
    visited[y][x] = 1;
    int move = a[y][x];
    if (y + move < n && visited[y + move][x] == 0) {
        DFS(y + move, x); // 아래 방향 이동
    }
    if (x + move < n && visited[y][x + move] == 0) {
        DFS(y, x + move); // 오른쪽 방향 이동
    }
    return;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> a[i][j];
        }
    }
    DFS(0, 0);
    if (flag) cout << "HaruHaru";
    else cout << "Hing";

    return 0;
}