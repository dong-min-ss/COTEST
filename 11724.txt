#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <queue>
using namespace std;

const int dy[] = { -1,0,1,0 };
const int dx[] = { 0,1,0,-1 };

int n, m, a, b, cnt;
vector<vector<int>> adj(1001);
int visited[1001];

void DFS(int prev) {
    visited[prev] = 1;

    for (auto a : adj[prev]) {
        if (visited[a]) continue;
        DFS(a);
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    for (int i = 1; i <= n; i++) {
        if (visited[i]) continue;
        DFS(i);
        cnt++;
    }

    cout << cnt;
   
    return 0;
}
