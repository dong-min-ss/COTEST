#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
using namespace std;

const int dy[] = { -1,0,0,1 };
const int dx[] = { 0,-1,1,0 };

int t, n, sticker[2][100001], sum[2][100001];

int solve() {
    memset(sum, 0, sizeof(sum));
    sum[0][0] = sticker[0][0];
    sum[1][0] = sticker[1][0];

    sum[0][1] = sticker[0][1] + sum[1][0];
    sum[1][1] = sticker[1][1] + sum[0][0];

    for (int i = 2; i < n; i++) {
        sum[0][i] = max(sum[1][i - 1], sum[1][i - 2]) + sticker[0][i];
        sum[1][i] = max(sum[0][i - 1], sum[0][i - 2]) + sticker[1][i];
    }

    return max(sum[0][n - 1], sum[1][n - 1]);
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> t;
    while (t--) {
        cin >> n;
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < n; j++) {
                cin >> sticker[i][j];
            }
        }
        cout << solve() << "\n";
    }

    return 0;
}
