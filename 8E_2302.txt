#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
using namespace std;
typedef long long ll;

const int INF = 987654321;

int n, m, vip, seat[41], dp[41];

int go(int here) {
    if (here >= n) return 1; // 마지막 자리
    if (seat[here]) return go(here + 1); // vip 고정 자리
    if (dp[here] != -1) return dp[here];

    int& ret = dp[here];
    ret = 0;
    if (seat[here + 1]) ret += go(here + 1); // 다음 좌석이 vip이면 자리를 바꾸지 않음
    else ret += (go(here + 2) + go(here + 1)); // 다음 좌석이 일반석이면 바꾸거나 바꾸지 않거나

    return ret;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> vip;
        seat[vip] = 1;
    }

    memset(dp, -1, sizeof(dp));
    cout << go(1);

    return 0;
}