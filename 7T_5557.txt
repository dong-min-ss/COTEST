#include<iostream>
#include<vector>
#include<map>
#include<cstring>
#include<algorithm>
#include<climits>
#include<iomanip>
using namespace std;
typedef long long ll;

ll n, a[101], dp[101][21];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
   
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];

    dp[1][a[1]] = 1;
    for (int i = 2; i < n; i++) {
        for (int j = 0; j <= 20; j++) {
            int num = dp[i - 1][j]; // 이전 상태
            if (num == 0) continue;

            int p = j + a[i];
            int m = j - a[i];
            if ((p > 20 || p < 0) && (m > 20 || m < 0)) break; // 두개 다 벗어나면 중지

            if (p <= 20 && p >= 0) {
                dp[i][p] += dp[i - 1][j];
            }
            if (m <= 20 && m >= 0) {
                dp[i][m] += dp[i - 1][j];
            }
        }
    }
    cout << dp[n - 1][a[n]]; // 앞 단계에서 a[n]에 도착하는 방법이 답

    return 0;
}