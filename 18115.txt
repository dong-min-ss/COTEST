#include <iostream>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstring>
using namespace std;

const int dy[] = { -1,0,0,1 };
const int dx[] = { 0,-1,1,0 };

int n, order;
vector<int> v;
deque<int> dq;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);

    cin >> n;
    for (int i = 1; i <= n; i++) {
        cin >> order;
        v.push_back(order);
    }
    reverse(v.begin(), v.end());

    int card = 1;
    for (auto a : v) {
        if (a == 1) {
            dq.push_front(card);
        }
        else if (a == 2) {
            int tmp = dq.front();
            dq.pop_front();
            dq.push_front(card);
            dq.push_front(tmp);
        }
        else {
            dq.push_back(card);
        }
        card++;
    }

    for (auto a : dq) cout << a << " ";

    return 0;
}
