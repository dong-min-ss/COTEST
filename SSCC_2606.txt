#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
typedef long long ll;
using namespace std;

//const int dy[] = { -1, 0, 1, 0 };
//const int dx[] = { 0, 1, 0, -1 };

int n, m, a, b, visited[104], cnt;
vector<int> adj[104];

void DFS(int start) {
    visited[start] = 1;

    for (auto a : adj[start]) {
        if (visited[a] == 0) {
            DFS(a);
        }
    }
    return;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    DFS(1);
    for (int i = 2; i <= n; i++) { // 1번 컴은 제외
        if (visited[i])
            cnt++;
    }
    cout << cnt;

    return 0;
}