#include<iostream>
#include<vector>
#include<map>
#include<cstring>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<iomanip>
#define y1 no
using namespace std;

//const int dy[] = { -1, 0, 1, 0 };
//const int dx[] = { 0, 1, 0, -1 };

int a[52][52], diff[52], res[52];

int solution(vector<string> friends, vector<string> gifts) {
    int answer = 0;
    map<string, int> mp;
    int fr = friends.size();
    
    for (int i = 0; i < fr; i++) { // 이름에 대한 인덱스 부여
        mp[friends[i]] = i;
    }
    for (int i = 0; i < gifts.size(); i++) { // 기버와 테이커 분류
        string s = gifts[i];
        size_t space = s.find(' ');
        string first = s.substr(0, space);
        string second = s.substr(space + 1);

        int giver = mp[first];
        int taker = mp[second];
        a[giver][taker]++;
        diff[giver]++; // 선물 지수 계산
        diff[taker]--;
    }
    for (int i = 0; i < fr; i++) {
        cout << diff[i] << "\n";
        for (int j = 0; j < fr; j++) {
            cout << a[i][j] << " ";
        }
        cout << "\n";
    }

    for (int i = 0; i < fr; i++) {
        for (int j = 0; j < fr; j++) {
            if (i == j) continue;
            if (a[i][j] == a[j][i]) { // 선물을 주고 받은 적이 없거나 같은 경우
                if (diff[i] > diff[j]) 
                    res[i]++; // 선물 지수 비교
            }
            else if (a[i][j] > a[j][i]) res[i]++;
        }
    }

    for (int i = 0; i < fr; i++)
        answer = max(answer, res[i]);

    return answer;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    vector<string> f = { "joy", "brad", "alessandro", "conan", "david" };
    vector<string> g = {
        "alessandro brad",
        "alessandro joy",
        "alessandro conan",
        "david alessandro",
        "alessandro david"
    };

    cout << solution(f, g);
}